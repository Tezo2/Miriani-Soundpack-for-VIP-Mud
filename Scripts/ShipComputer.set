#Var ComputerActions {
Autopilot engaged.^
 #If {@SpeakWhenPossible=1} {
  #GagLine 1 Voice;
  MirianiSoundPlay Standard Ship\Move\AutopilotEngaged~@Ext
 } {#Var PlayComputerSound 1}
|
Autopilot disengaged.^
 #If {@SpeakWhenPossible=1} {
  #GagLine 1 Voice;
  MirianiSoundPlay Standard Ship\Move\AutopilotDisengaged~@Ext
 } {#Var PlayComputerSound 1}
|
Self-destruct sequence initiated. Destruction in sixty seconds.^
 MirianiSoundPlay Standard Ship\Computer\Self-Distruct~@Ext;
 MirianiSoundPlay Standard Ship\Computer\SelfDestructStart~@Ext
|
Self-destruct in thirty seconds.^
 #GagLine 1 Voice;
 MirianiSoundPlay Standard Ship\Computer\SelfDestructThirty~@Ext
|
Self-destruct in ten seconds.^
 #GagLine 1 Voice;
 MirianiSoundPlay Standard Ship\Computer\SelfDestructTen~@Ext
|
Five.^
 #GagLine 1 Voice;
 MirianiSoundPlay Standard Ship\Computer\SelfDestructFive~@Ext
|
Four.^
 #GagLine 1 Voice;
 MirianiSoundPlay Standard Ship\Computer\SelfDestructFour~@Ext
|
Three.^
 #GagLine 1 Voice;
 MirianiSoundPlay Standard Ship\Computer\SelfDestructThree~@Ext
|
Two.^
 #GagLine 1 Voice;
 MirianiSoundPlay Standard Ship\Computer\SelfDestructTwo~@Ext
|
One.^
 #GagLine 1 Voice;
 MirianiSoundPlay Standard Ship\Computer\SelfDestructOne~@Ext
|
Goodbye.^MirianiSoundPlay Standard Ship\Computer\SelfDestructEnd~@Ext
|
Warning! Aquatic life form has entered scooper chamber. Expulsion in progress...^
 #Var PlayComputerSound 1;
 MirianiSoundPlay Standard Atmo/fishscoop~@Ext
|
The destination specified is beyond the range of the wormhole drive.  Attempting to utilize jumpgate network.^
 MirianiSoundPlay Standard Ship\Computer\JumpgateCalculate~@Ext;
 ExpPipe {~@ComputerSaid} {~@ComputerSaid} {:Voice:~@ComputerSaid}
|
Aborting repair task. Please stand by.^
 MirianiSoundPlay Standard Ship\Computer\Abort~@Ext;
 ExpPipe {~@ComputerSaid} {~@ComputerSaid} {Aborting repair task.}
|
Scans reveal the debris to be a life form.^
 MirianiSoundPlay Standard Ship\Misc\SalvageLifeForm~@Ext;
 ExpPipe {~@ComputerSaid} {~@ComputerSaid} {Lifeform salvaged!}
|
Docking complete.^
 #Var PlayComputerSound 1;
 MirianiSoundPlay Standard Ship\Misc\DockingBayDoorClose~@Ext
|
Sensors detect an obstacle in the path of the wormhole. Aborting FTL travel...^
 #Var PlayComputerSound 1;
 #If {@SpeakWhenPossible=1} {MirianiSoundPlay Standard Ship\Move\PathBlocked~@Ext}
|
There is insufficient weapons-grade bardenium available for firing.^
 MirianiSoundPlay Standard Ship\Combat\NoBard~@Ext;
 #If {~%Defined(CannonsAvailableBard)=1} {#Var CannonsAvailableBard 0};
 ExpPipe {~@ComputerSaid} {There is insufficient bardenium available for firing.} {Insufficient bardenium available.}
|
The cannons now have sufficient ammunition for firing.^
 #Var PlayComputerSound 1;
 #If {~%Defined(CannonsAvailable)=1} {
  #Math CannonsAvailableBard {~@CannonsAvailable*10};
  #If {~@CannonsAvailableBard<20} {#Var CannonsAvailableBard 20}
 };
 ExpPipe {~@ComputerSaid} {Cannons reloaded.} {Reloaded.}
|
The target has moved from the locked coordinates.^
 MirianiSoundPlay Standard Ship\Combat\Lostlock~@Ext;
 ExpPipe {~@ComputerSaid} {~@ComputerSaid} {:Voice:Target has moved.}
|
Precision wormhole drive is powering up. Calculating optimal path for precision entry...^
 #Var PlayComputerSound 1;
 MirianiSoundPlay Standard Ship\Move\PreciseFTL~@Ext
|
The starship has entered an H II region. Caution is advised.^
 #Var PlayComputerSound 1;
 MirianiSoundPlay Standard Ship\Computer\Nebula~@Ext
|
NAVI was unable to continue due to sensor interference.^MirianiSoundPlay Standard Ship\Computer\Anomaly~@Ext
|
NAVI program has been interrupted. Autopilot is unable to continue.^MirianiSoundPlay Standard Ship/Computer/Error~@Ext
|
Warning, avian lifeform in processing chamber. Expelling...^
 #Var PlayComputerSound 1;
 MirianiSoundPlay Standard Ship\Misc\SalvageLifeForm~@Ext;
 mrandomplay ACV\AvianExpulsion*38~@Ext;
 ExpPipe {~@ComputerSaid} {Expelling avian lifeform from processing chamber.} {}
|
Cargo capacity has been filled. Shutting down atmospheric scooper.^
 #Var PlayComputerSound 1;
 ExpPipe {~@ComputerSaid} {Cargo capacity has been filled.} {Cargo capacity filled.}
|
The target is no longer available. Probable cause for lost sensor contact is destruction.^
 #If {~%Defined(SomeoneElseFires)=0} {
  #Math DirectHits {~@DirectHits+1};
  #Math DestroyedShips {~@DestroyedShips+1};
  #Math TotalShips {~@TotalShips+1}
 } {#UnVar SomeoneElseFires};
 MirianiSoundPlay Standard Ship\Combat\OtherDestroyed*11~@Ext;
 ExpPipe {~@ComputerSaid} {~@ComputerSaid} {Target destroyed.}
|
Direct hit. Target was not destroyed.^
 #If {~%Defined(SomeoneElseFires)=0} {#Math DirectHits {~@DirectHits+1}} {#UnVar SomeoneElseFires};
 mwplay Ship\Combat\OtherHit4~@Ext;
 ExpPipe {~@ComputerSaid} {~@ComputerSaid} {Direct hit.}
|
Push pulse device destroyed safely.^MirianiSoundPlay Standard Ship\Combat\OtherDestroyed*11~@Ext
|
There is no target at those coordinates. Aborting.^MirianiSoundPlay Standard General\Misc\Cancel~@Ext
|
Warning, projectile approaching on automatically guided vector. Brace for impact.^mwplay Ship\Combat\Projectile*3~@Ext
|
Combat drone launch failed. NO valid targets detected.^MirianiSoundPlay Standard Ship\Computer\Error~@Ext
|
Activate.^MirianiSoundPlay Standard Ship\Move\QVAActivate~@Ext
|
Establishing computer link with a quantum vacuum accelerator...^MirianiSoundPlay Standard Ship\Move\QVAEstablish~@Ext -40
|
Link established. Proceeding with stage one checklist...^MirianiSoundPlay Standard Ship\Move\PreciseFTL~@Ext
|
Safety check complete. Telemetry handshake complete. Wormhole drive interlink confirmed. System sanity checks complete. Checklist confirmed green.^MirianiSoundPlay Standard Ship\Move\QVAFinalise~@Ext
}

#Var ComputerActionsW {
Turret* locking onto *.^
 GetWildcardValues {~@ComputerAction} {~@ComputerSaid};
 #If {~@UseAlternativeCombatSounds=1 AND ~%Pos(Praelor,~@Wildcard2)>0} {MirianiSoundPlay Standard Ship\Combat\FireAtPraelor~@Ext};
 #If {~%Replace(~@Wildcard2,~~",)="empty space"} {
  MirianiSoundPlay Standard General\Misc\Cancel@Ext;
  ExpPipe {~@ComputerSaid} {Turret@Wildcard1 locking on nothing} {Nothing targeted.}
 } {
  MirianiSoundPlay Standard Ship\Combat\WeaponsLocked~@Ext;
  MirianiSoundPlay Standard Ship\Computer\Keyboard*15~@Ext
 }
%Chr(250)
Bardenium Cannon* locked on *. Firing.^
 GetWildcardValues {~@ComputerAction} {~@ComputerSaid};
 #If {~@UseAlternativeCombatSounds=1 AND ~%Pos(Praelor,~@Wildcard2)>0} {MirianiSoundPlay Standard Ship\Combat\FireAtPraelor~@Ext};
 MirianiSoundPlay Standard Ship\Combat\WeaponsLocked~@Ext;
 MirianiSoundPlay Standard Ship\Computer\Keyboard*15~@Ext;
 ExpPipe {~@ComputerSaid} {Bardenium Cannon~@Wildcard1 locked on ~@Wildcard2.} {Cannon~@Wildcard1 locked on ~@Wildcard2.};
 #If {~%Defined(CannonsSalvoSize)=1} {
  #Math CannonsAvailableBard {~@CannonsAvailableBard-~@CannonsSalvoSize};
  #If {~@CannonsAvailableBard<=0} {MirianiSoundPlay Standard Ship\Combat\NoBard~@Ext}
 }
%Chr(250)
Hit on *.^
 #If {~%Defined(SomeoneElseFires)=0} {#Math DirectHits {~@DirectHits+1}} {#UnVar SomeoneElseFires};
 mwplay Ship\Combat\OtherHit5~@Ext;
 #If {~@MissionMode=1 and ~%Pos(Hit on Ontanka starship Praelor ,~@ComputerSaid)=1} {#Var ExpString {Hit on ~%Copy(~@ComputerSaid,33)}}
%Chr(250)
Partial hit on *.^
 #If {~%Defined(SomeoneElseFires)=0} {#Math PartialHits {~@PartialHits+1}} {#UnVar SomeoneElseFires};
 mwplay Ship\Combat\OtherHit3~@Ext;
 MirianiSoundPlay Standard Ship\Combat\PartialHit~@Ext 20;
 #If {~@MissionMode=1 and ~%Pos(Partial hit on Ontanka starship Praelor ,~@ComputerSaid)=1} {#Var ExpString {Partial hit on ~%Copy(~@ComputerSaid,41)}}
%Chr(250)
* destroyed.^
 #If {~%Pos(Direct hit. ,~@ComputerSaid)=1} {
  MirianiSoundPlay Standard Ship\Combat\OtherDestroyed*11~@Ext;
  ExpPipe {~@ComputerSaid} {~@ComputerSaid} {~%Copy(~@ComputerSaid,13)}
 } {
  #Var Wildcard1 {~%Copy(~@ComputerSaid,1,~%Length(~@ComputerSaid)-11)};
  #If {~%IfWord(~@Wildcard1,Blockade|Debris,|)=1} {
   #If {~@Wildcard1="Debris"} {
    #Math DestroyedDebris {~@DestroyedDebris+1};
    mwplay Ship\Combat\DebrisDestroyed~@Ext
   } {
    MirianiSoundPlay Standard Ship\Combat\OtherDestroyed*11~@Ext
   }
  } {
   #Math DirectHits {~@DirectHits+1};
   #Math DestroyedShips {~@DestroyedShips+1};
   #Math TotalShips {~@TotalShips+1};
   MirianiSoundPlay Standard Ship\Combat\OtherDestroyed*11~@Ext
  }
 }
%Chr(250)
* is locking onto empty space.^MirianiSoundPlay Standard General\Misc\Cancel~@Ext
%Chr(250)
Long-Range Laser * is locking onto *.^
 GetWildcardValues {~@ComputerAction} {~@ComputerSaid};
 #If {~@UseAlternativeCombatSounds=1 AND ~%Pos(Praelor,~@Wildcard2)>0} {MirianiSoundPlay Standard Ship\Combat\FireAtPraelor~@Ext};
 #If {~%Replace(~@Wildcard2,~~",)="empty space"} {
  MirianiSoundPlay Standard General\Misc\Cancel~@Ext;
  ExpPipe {~@ComputerSaid} {Turret@Wildcard1 locking on nothing} {Nothing targeted.}
 } {
  MirianiSoundPlay Standard Ship\Combat\WeaponsLocked~@Ext;
  MirianiSoundPlay Standard Ship\Computer\Keyboard*15~@Ext
 }
%Chr(250)
Intruder alert! *^MirianiSoundPlay Standard Ship\Combat\Intruder~@Ext
%Chr(250)
* indicates that it*s under attack.^MirianiSoundPlay Standard Ship\Combat\UnderAttack@Ext
%Chr(250)
* been detected in the sector.^
 MObject {~@ComputerSaid};
 #If {~%Length(~@MObjectFound)=0} {#Var PlayComputerSound 1}
%Chr(250)
Warning, power level has dropped to *~%.^
 GetWildcardValues {~@ComputerAction} {~@ComputerSaid};
 #If {~%IsNumber(~@WildCard1)=1 AND ~@WildCard1>5} {MirianiSoundPlay Standard Atmo\SalvageLow~@Ext} {MirianiSoundPlay Standard Atmo\SalvageCritical~@Ext}
%Chr(250)
Scans reveal the debris to be a lifeform*.^
 GetWildcardValues {~@ComputerAction} {~@ComputerSaid};
 MirianiSoundPlay Standard Ship\Misc\Lifeform~@Ext;
 #If {~%Length(~@Wildcard1)=0} {
  ExpPipe {~@ComputerSaid} {~@ComputerSaid} {Lifeform salvaged!}
 } {
  ExpPipe {~@ComputerSaid} {~@ComputerSaid} {Salvaged a lifeform~@Wildcard1}
 }
%Chr(250)
* pulse is locking *...^MirianiSoundPlay Standard Ship\Combat\PulseLock*2~@Ext
%Chr(250)
Mission objective has been completed in approximately *. Return to base.^
 GetWildcardValues {~@ComputerAction} {~@ComputerSaid};
 MirianiSoundPlay Standard Music\*30~@Ext;
 #If {~@UseHitCounter=1} {
  #Var DirectHits {~%If(~%IsNumber(~@DirectHits)=0,0,~@DirectHits)};
  #Var PartialHits {~%If(~%IsNumber(~@PartialHits)=0,0,~@PartialHits)};
  #Var DestroyedShips {~%If(~%IsNumber(~@DestroyedShips)=0,0,~@DestroyedShips)};
  #Var TotalShips {~%If(~%IsNumber(~@TotalShips)=0,0,~@TotalShips)};
  #Var DestroyedDebris {~%If(~%IsNumber(~@DestroyedDebris)=0,0,~@DestroyedDebris)};
  #If {~@DirectHits=0 AND ~@PartialHits=0} {
   #Var ExpString {No hits on ~@TotalShips ships}
  } {
   #Math TotalHits {~@DirectHits + ~@PartialHits};
   #Var ExpString {~%Replace(~@HitCounterFormatString,$TOTALHITS,~@TotalHits)};
   #Var ExpString {~%Replace(~@ExpString,$DIRECTHITS,~@DirectHits)};
   #Var ExpString {~%Replace(~@ExpString,$PARTIALHITS,~@PartialHits)};
   #Var ExpString {~%replace(~@ExpString,$DESTROYEDSHIPS,~@DestroyedShips)};
   #Var ExpString {~%Replace(~@ExpString,$TOTALSHIPS,~@TotalShips)};
   #Var ExpString {~%Replace(~@ExpString,$DESTROYEDDEBRIS,~@DestroyedDebris)}
  };
  #Var ExpString {~@ExpString in ~@Wildcard1.};
  PushMessage Mission0Reports {~@ExpString}
 }
%Chr(250)
I am beginning the repair of *. Estimated time to completion: *.^
 #Var PlayComputerSound 1;
 MirianiSoundPlay Standard Ship\Computer\RepairStart~@Ext 10;
 GetWildcardValues {~@ComputerAction} {~@ComputerSaid};
 ExpPipe {~@ComputerSaid} {Repairing ~@Wildcard1. ~@Wildcard2 until complete.} {Repairing ~@Wildcard1, ~@Wildcard2.}
%Chr(250)
* will be completely repaired in approximately *.^
 #Var PlayComputerSound 1;
 GetWildcardValues {~@ComputerAction} {~@ComputerSaid};
 ExpPipe {~@ComputerSaid} {~@Wildcard1 will be repaired in approximately ~@Wildcard2.} {~@Wildcard1 will be repaired in ~@Wildcard2.}
%Chr(250)
I have completed the repair of *.^
 #Var PlayComputerSound 1;
 MirianiSoundPlay Standard Ship\Computer\RepairComplete~@Ext;
 GetWildcardValues {~@ComputerAction} {~@ComputerSaid};
 ExpPipe {~@ComputerSaid} {Completed the repair of ~@Wildcard1.} {~@Wildcard1 repaired.}
%Chr(250)
Via synchronized text message broadcasts, *^
 GetWildcardValues {~@ComputerAction} {~@ComputerSaid};
 MirianiSoundPlay Standard Ship\Comm\STMB~@Ext;
 #Var ExpPipe {[Synchronized Text Message Broadcast] ~@WildCard1};
 PushMessage Comm {~@ComputerSaid}
%Chr(250)
This vessel is of the * design. It was manufactured on * at the * and commissioned by the *. The vessel came under licensed control on * and is presently licensed to *.^
 #Var PlayComputerSound 1;
 GetWildcardValues {~@ComputerAction} {~@ComputerSaid};
 ExpPipe {~@ComputerSaid} {~@ComputerSaid} {This ~@Wildcard1 is presently licensed to ~@Wildcard6.~%{CRLF}It came under licensed control on ~@Wildcard5.~%{CRLF}It was manufactured on ~@Wildcard2 at the ~@Wildcard3, and commissioned by the ~@Wildcard4.}
%Chr(250)
The game has ended! The winner is *^
 mrplay;
 MirianiSoundPlay Standard Music\*30~@Ext
}

#Trigger {* announces, *} {
 #If {%Pos(:,%1)=0 and %Pos(~, ~",%1)=0 and %IfWord(%Left(%1,1),>| |#|-|[|~(,|)=0} {
  #If {%Pos(A computerized voice on ,%1)=1} {MirianiSoundPlay Standard Ship\Computer\LFD@Ext;#Abort};
  #If {%Pos( flickers ,%1)>0} {#Var ComputerName {%Copy(%1,1,%Pos( flickers ,%1)-1)}} {#Var ComputerName {Computer}};
  #Var ComputerSaid {%Copy(%2,1)};
  #If {%Pos(Control room reports: ,@ComputerSaid)=1} {#Var ComputerPiped 1;#Var ComputerSaid {%Copy(@ComputerSaid,23)}} {#Var ComputerPiped 0};
  #Var ComputerTmp1 {%CRLF@ComputerSaid^};
  #Var ComputerTmp1 {%Pos(@ComputerTmp1,@ComputerActions)};
  #Var ComputerCommands {};
  #If {@ComputerTmp1>0} {
   #Var ComputerTmp1 {%Copy(@ComputerActions,@ComputerTmp1+%Length(@ComputerSaid)+3)};
   #Var ComputerCommands {%Word(@ComputerTmp1,%CRLF|%CRLF,1)}
  } {
   #Var ComputerTmp1 {%Replace(@ComputerSaid,~",)};
   #Var ComputerTmp2 0;
   #Var ComputerTmp3 {%NumWords(@ComputerActionsW,%Chr(250))};
   #While {@ComputerTmp2<@ComputerTmp3} {
    #Math ComputerTmp2 {@ComputerTmp2+1};
    #Var ComputerAction {%Copy(%Word(%Word(@ComputerActionsW,%Chr(250),@ComputerTmp2),^,1),3)};
    #If {@ComputerTmp1=*%Replace(@ComputerAction,~",)} {
     #Var ComputerCommands {%Word(%Word(@ComputerActionsW,%Chr(250),@ComputerTmp2),^,2)};
     #Var ComputerTmp2 {@ComputerTmp3}
    }
   }
  };
  #Var ExpString {@ComputerSaid};
  #If {%Length(@ComputerCommands)>0} {
   #Exec {@ComputerCommands};
   #If {%Defined(PlayComputerSound)=1} {
    MirianiSoundPlay Standard {Ship\Computer\%If(@ComputerPiped=1,LFD@Ext,Announce*4@Ext)};
    #UnVar PlayComputerSound
   }
  } {MirianiSoundPlay Standard {Ship\Computer\%If(@ComputerPiped=1,LFD@Ext,Announce*4@Ext)}};
  #If {@GagAvatars=0 and (@ExperienceLevel<3 or @ComputerName<>"Computer")} {#Var ExpString {@ComputerName: @ExpString}};
  PushMessage Computer {@ExpString};
  #If {@SpeakComputerMessagesThroughSAPI=1 AND @ComputerSpoken<>1} {
   SSpeak @ExpString;
   #GagLine 1 Voice
  };
  #Sub {@ExpString}
 }
} {Main}

#Trigger {The computer reports *} {
 #Var ExpString {};
 #Var ShipComputerTmp1 {%Replace(%1,~",)};
 #Var ShipComputerTmp2 {Ship\Computer\Report*4@Ext};
 #If {@ShipComputerTmp1="no nearby debris."} {
  #Var ShipComputerTmp2 {Ship\Computer\NoNearbyDebris@Ext};
  ExpPipe {%0} {:Voice:%Proper(%1)} {}
 };
 #If {@ShipComputerTmp1=*"* is one unit away from this ship."} {
  #Var ShipComputerTmp2 {Ship\Computer\OneUnitAway@Ext};
  ExpPipe {%0} {%1} {%Copy(%1,1,%Pos(is one unit away from this ship.%CRLF,%1%CRLF))n range.}
 };
 #If {@ShipComputerTmp1=*"* has been destroyed."} {
  #Math TotalShips {@TotalShips + 1};
  mwplay Ship\Combat\OtherDestroyed*11@Ext;
  ExpPipe {%0} {%0} {%Copy(%1,6,%Length(%1)-25) destroyed.}
 };
 #If {@ShipComputerTmp1=*"the starship is headed for *. The computer estimates approximately * until arrival at the destination at sublight speeds."} {
  #Var ShipComputerTmp3 {%Pos(. The computer estimates approximately ,%1)};
  #Var ShipComputerTmp4 {%Copy(%1,28,@ShipComputerTmp3-28)};
  #Var ShipComputerTmp5 {%Copy(%1,@ShipComputerTmp3+39)};
  #Var ShipComputerTmp5 {%Copy(@ShipComputerTmp5,1,%Pos(until arrival at the destination at sublight speeds,@ShipComputerTmp5)-2)};
  ExpPipe {%0} {%0} {@ShipComputerTmp5 until arrival at @ShipComputerTmp4.};
  #UnVar ShipComputerTmp3;
  #UnVar ShipComputerTmp4;
  #UnVar ShipComputerTmp5
 };
 #If {%Length(@ShipComputerTmp2)>0} {
  #If {%NumWords(@ShipComputerTmp2,|)>1} {
   MirianiSoundPlay Computer {%Word(@ShipComputerTmp2,|,1)} {%Word(@ShipComputerTmp2,|,2)}
  } {
   MirianiSoundPlay Computer {%Word(@ShipComputerTmp2,|,1)}
  }
 };
 #If {%Length(@ExpString)=0} {
  #If {%Pos(that ,@ShipComputerTmp1)=1} {#Var ShipComputerTmp1 {%Copy(%1,6)}} {#Var ShipComputerTmp1 {%1}};
  ExpPipe {%0} {%0} {%Proper(@ShipComputerTmp1)}
 };
 #Sub {@ExpString};
 #UnVar ShipComputerTmp1;
 #UnVar ShipComputerTmp2
} {Main|Starship}
#Trigger {* presses a button on a navigation console and examines the display.} {MirianiSoundPlay Standard Ship\Computer\Keyboard*15@Ext;
ExpPipe {%0} {%0} {%1 checks the navigation console.};
#sub {@ExpString}} {Main|Starship}
#Trigger {A destination appears on the ship's navigation controls: *} {
 MirianiSoundPlay Standard Ship\Computer\Keyboard*15@Ext;
 ExpPipe {%0} {Heading to %1} {Destination: %1};
 #Sub {@ExpString}
} {Main|Starship}
#Trigger {Total Weight: *} {MirianiSoundPlay Standard Ship\Computer\Display@Ext} {Main}
#Trigger {There is nothing in the cargo hold.*} {MirianiSoundPlay Standard Ship\Computer\Display@Ext} {Main|Craft}
#Trigger {*:} {
 #If {%IfWord(%1,Charge Readout|Critical Damage|Light Damage|Moderate Damage|Starship Damage|Starship Security Status|Starship Status|Starship Weapon Configuration|Weapon Information|Weapon Configuration|Weapon Status,|)=1} {
  ExpPipe {%0} {:Voice:%0} {:Voice:%0};
  #Sub {@ExpString};
  MirianiSoundPlay Standard Ship\Computer\Display@Ext
 }
} {Main}
#Trigger {Current coordinates: *} {
 #Var MyCoordsX {%Word(%1,~, ,1)};
 #Var MyCoordsY {%Word(%1,~, ,2)};
 #Var MyCoordsZ {%Word(%1,~, ,3)};
 #If {@InterruptOnFocus=1} {speech stop};
 #If {@currentroomsound="Ship\Rooms\Salvager.wav"} {
  ExpPipe {%0} {%1} {@MyCoordsX @MyCoordsY}
 } {
  ExpPipe {%0} {%1} {@MyCoordsX @MyCoordsY @MyCoordsZ}
 };
 #sub {@ExpString};
 #class AtSaStarmap disable
} {Main}
#Trigger {A * beep sounds as the computer announces* "* charge remaining."} {
 MirianiSoundPlay Standard Ship\Computer\LowCharge*3@Ext;
 ExpPipe {%0} {[Alert]: %3 charge remaining!} {%3 charge remaining!};
 #sub {@ExpString}
} {Main}
#Trigger {* Lights overhead indicate that the ship is on * status. *} {
 #If {%2 = "red alert"} {
  #If {%Mp3Loop=0} {
   mtplay
  }
 } {
  thememusicfadeout
 }
} {Main|Starship}
#Trigger {A* suddenly emerges from a console.} {MirianiSoundPlay Standard Ship\Computer\ScanRetrieved@Ext} {Main|Starship}
#Trigger {Video probe history:} {ExpPipe {%0} {%0} {};
#sub {@ExpString};
MirianiSoundPlay Standard Ship\Computer\Probe*3@Ext} {Main}
#Trigger {Scanning is made much more difficult by the lack of sensors.} {
 #class focus disable;
 MirianiSoundPlay Standard Ship\Computer\Error@Ext
} {Main|Starship}
#Trigger {* is unable to function without sensors.} {MirianiSoundPlay Standard Ship\Computer\Error@Ext} {Main|Starship}
#Trigger {There is * that prevents movement.} {MirianiSoundPlay Standard Ship\Computer\Error@Ext} {Main}
#Trigger {Control room computer announcements will now be *.} {#If {%1 = "announced ship-wide"} {
MirianiSoundPlay Standard Ship\Computer\PipeOn@Ext
} {
MirianiSoundPlay Standard Ship\Computer\PipeOff@Ext
}} {Main|Starship}
#Trigger {* emerges from a nearby console.} {MirianiSoundPlay Standard Ship\Computer\ScanRetrieved@Ext} {Main|Starship}
#Trigger {The * cannot function without operational sensors.} {MirianiSoundPlay Standard Ship\Computer\Error@Ext} {Main|Starship}
#Trigger {Alert: Sensor interference detected.} {ExpPipe {%0} {Sensor interference detected.} {};
#sub @ExpString;
MirianiSoundPlay Standard Ship\Computer\SensorInterference@Ext} {Main|Starship}
#Trigger {* voice comes over the intercom, announcing, *} {
 MirianiSoundPlay Standard Ship\Computer\Announce*4@Ext;
 ExpPipe {%0} {[%1]: %2} {%2};
 #Sub {@ExpString};
 PushMessage Computer {@ExpString};
} {Main|Starship}
