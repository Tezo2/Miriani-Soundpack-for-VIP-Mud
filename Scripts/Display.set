; Display.set
; 
; This file contains the routines for routing text to the different virtual displays.
; 
; VD:
; This alias exists to show or hide each display, and takes a number as the argument, which must
; be between 1 and the total number of allowed displays (see Conf Display).

#Alias VD {
 #Var NumberOfDisplays {%NumWords(@VirtualDisplays,|)};
 #If {%IsNumber(%1)=1} {
  #If {%1<1 or %1>@NumberOfDisplays} {
   ConfPrint {Number out of range. @NumberOfDisplays virtual displays are currently implemented.}
  } {
   #If {@{HideDisplay%1}<>1} {#Var {HideDisplay%1} {1}} {#Var {HideDisplay%1} {0}};
   ConfPrint {Now %If(@{HideDisplay%1}=1,hiding,showing) Virtual Display %1: %Word(@VirtualDisplays,|,%1)}
  }
 } {
  #If {%IsNumber(%2)=1} {
   #If {%2<1 or %2>@NumberOfDisplays} {
    #If {%2=0} {
     #UnVar NumberOfDisplays;
     #Alarm 0 {ConfSaveAll};
     #Abort All
    } {
     #Say {Number out of range. @NumberOfDisplays virtual displays are currently implemented.}
    }
   } {
    #If {@{HideDisplay%2}<>1} {#Var {HideDisplay%2} {1}} {#Var {HideDisplay%2} {0}};
    #Say {Now %If(@{HideDisplay%2}=1,hiding,showing) Virtual Display %2: %Word(@VirtualDisplays,|,%2)}
   }
  };
  #Var DisplayTmp1 0;
  #Var DisplayTmp2 {};
  #Var DisplayTmp3 {};
  #Var HiddenDisplays 0;
  #While {@DisplayTmp1<@NumberOfDisplays} {
   #Math DisplayTmp1 {@DisplayTmp1 + 1};
   #If {@{HideDisplay@{DisplayTmp1}}=1} {
    #Var DisplayTmp3 {%Replace(@{Display@{DisplayTmp1}Filter},~",~%0x22~%)};
    #Var DisplayTmp3 {%Replace(@DisplayTmp3,~~,~%0x7e~%)};
    #If {@DisplayTmp3="*"} {
     #Var DisplayTmp3 {hidden.}
    } {
     #Var DisplayTmp3 {hidden (when matching with: @{Display@{DisplayTmp1}Filter}).}
    };
    #Math HiddenDisplays {@HiddenDisplays + 1}
   } {
    #Var DisplayTmp3 {visible.}
   };
   #Var DisplayTmp2 {@DisplayTmp2[@DisplayTmp1] %Word(@VirtualDisplays,|,@DisplayTmp1): @DisplayTmp3%CRLF}
  };
  #Var DisplayTmp2 {@{DisplayTmp2}[0] Finish.%{CRLF}  Hidden displays: @HiddenDisplays.};
  #Say {vd menu } Entry|NoReturn;
  ConfPrint {@DisplayTmp2};
  #UnVar DisplayTmp1;
  #UnVar DisplayTmp2;
  #UnVar DisplayTmp3;
  #UnVar HiddenDisplays
 };
 #UnVar NumberOfDisplays
} {}

; DisplayPrint:
; Syntax:
; DisplayPrint <Display> {<Text>}
; 
; So like:
; DisplayPrint 1 {Some text for the first Virtual Display.} {the raw input, that is used for filters.}
; 
; The result is stored in @DisplayString.
; 
; Here's a more involved example:
; #Trigger {Some text.} {
;  ExpPipe {%0} {Some} {Text};
;  DisplayPrint 1 {@ExpString} {%0};
;  #sub @DisplayString
; } {Main}

#Alias DisplayPrint {
 #Var DisplayString {%2};
 #Var {Display%{1}IsHidden} {0};
 #If {@{HideDisplay%1}=1} {
  #Var DisplayFilterTmp1 {%Replace(%3,~",~%0x22~%)};
  #Var DisplayFilterTmp1 {%Replace(@DisplayFilterTmp1,~~,~%0x7e~%)};
  #Var DisplayFilterTmp2 {%Replace(@{Display%{1}Filter},~",~%0x22~%)};
  #Var DisplayFilterTmp2 {%Replace(@DisplayFilterTmp2,~~,~%0x7e~%)};
  #If {@DisplayFilterTmp1=*@DisplayFilterTmp2} {
   #GagLine 1 {@{Display%{1}GagType}};
   #Var {Display%{1}IsHidden} {1}
  }
 }
} {}
