#Var IgnoredConfOptionVars {
ScriptPath
SoundsPath
ThemesPath
}

#If {%Defined(ConfManagerMenusLoaded)=0} {#Var ConfOptionVars {
ScriptPath:%MudName\Miriani Soundpack for VIP Mud\Scripts
SoundsPath:%MudName\Miriani Soundpack Sounds
ThemesPath:%MudName\Miriani Soundpack Sounds\Themes
ConfName:My Soundpack Configuration
GagDashes:0
GagGenMessages:0
GagExits:0
RoundTimeThreshold:1
GagTreadLine:0
ExperienceLevel:1
Real:0
AlterArmor:1
FormatRoomTitles:0
FormatMessageBoards:0
MessageBoardFormatString:[$SENDER]: $SUBJECT on $DATE ($REFERENCE)
ShowExpertExits:0
PlayRoundtimeSound:0
PlayWhenThwarted:0
AlertOnPlayers:0
PlayStartupMusic:1
AutoLogin:1
BypassLoginMenu:0
AutoSave:1
CommandEcho:1
ShowStats:0
KeepAlive:120
KeepAliveRespond:0
SaveOnIdle:1
AlertOnUpdate:1
OrgName:NOORG
CourierCompany:NOCOURIERCOMPANY
StripMessagePrefix:0
HideMetafrequency:0
Encoding:none
HistoryBufferSize:10
PrintVoiceOnly:0
HistoryTimeout:0.25
BuffersForReview:Output,Comm,Say,Flight,PA
SuppressDuplicateEntries:0
IgnoredHistoryBuffers:None
PlaySoundsOnReview:1
HistoryVolumeOffset:20
HistoryPanning:0
ModifyShoppingGuide:0
ShoppingGuideFormatString:[$ITEM ($PRICE)] $POINTS,$COMBATPOINTS at $STORE on $LOCATION
MissionMode:0
UseHitCounter:0
HitCounterFormatString:Total hits: $TOTALHITS ($DIRECTHITS direct, $PARTIALHITS partial). $DESTROYEDSHIPS ships, and $DESTROYEDDEBRIS debris were destroyed
ExtraFiringSound:1
UseAlternativeCombatSounds:0
RelDriveFreq:44100
RelDriveVolume:0
RelDriveStyle:1
RelDriveBeep:0
ScanFilters:1
ScanOutputString:Distance $DISTANCE, average DMG:$MATH($MATH($HULL + $COMPONENT) / 2)%. Occupants:$OCCUPANTS, weapons:$WEAPONS. Charge $POWER.
GagScan:0
DisplayOriginalScanOutput:0
ShortenObjects:1
FocusOutputString:$COORDS ($NAME)
CountOccupants:1
GagAvatars:0
PaPrefix:[PA]&SPC;
ExtPrefix:[Ext]&SPC;
PlaySoundsOnPipe:1
SpeakWhenPossible:0
FlipSectorInfo:0
MuteAlertContSounds:0
MutePraelorIsEnemySound:1
PatternFormatString:[$NAME]: $PATTERN. Now at ($COORDS)
EnhancedAimSoundSystem:1
ClassDependant:0
WakeOnRed:0
GagDontUnderstandMessages:0
NoDescString:You see nothing special.
GagRoidDesc:0
Surveying:0
GagSaveOnIdle:1
InterruptOnCoords:0
GagExtraLoads:1
PointUnitOutputString:You access $UNIT and note you have $LP license points and $CP combat points.$CRLFYou have acquired $DIFFLP license points and $DIFFCP combat points since last check.
ShowPointsOOLS:0
BypassSocialToggles:0
BypassActionToggles:0
Silent:0
Vol:60
RoomSounds:1
SilentZoneTypes:abcdefghijklmnopqrstuvwxyz
SilentZoneNames:abcdefghijklmnopqrstuvwxyz
SilentRoomNames:abcdefghijklmnopqrstuvwxyz
RoomSoundsVolumeDiff:-20
SocialsOn:1
FormatBannedEmotees:1
ActionsOn:1
EmotesOn:1
PlayTreadSound:1
PlayOtherTreadSound:1
PlanetSounds:0
CameraVolumeDiff:-10
CameraPan:2000
WarnWhenLeft:1
ThemeMusic:0
ThemeSoundVolumeDiff:0
NumOfThemes:31
RandomiseCombatPan:1
RandomiseCombatVolume:0
RelativeCombatVolume:0
RandomisePlay:1
ThemeFadeOutValue:5
WindowTypes:Incoming
UseSpeechInterrupts:0
InterruptOnFocus:0
InterruptOnFollow:0
InterruptOnRoom:0
SpeakRoomTitleFirst:0
InterruptOnBoards:0
InterruptOnPa:0
DefaultSpeechType:Jaws
SAPIVoice:0
SAPIVolume:100
SAPIRate:50
SpeakComputerMessagesThroughSAPI:0
SetEntrySpeechOff:0
AtSaBetweenObjects:.&SPC;
AtSaObjectString:$XD$R $R$YD
AtSaInformationString:Estimated $PowerEst~% of power left for scooping, $Dist unit$sDist to the ship, and $CargoRem remaining cargo
AtSaSortOrder:0
ModifyAcvOutput:0
SCGCList:Sector 15. Miriani:-603126, 40, 507
ShowGalcoords:1
SendCommandDirectly:1
UseSMStyle:0
ConfEchoMode:0
LogHistory:0
HistoryLoggingInterval:100
LoadSoundKeys:1
LoadHistoryReviewKeys:1
ExcludeAltGRNumrow:1
LoadMiscKeys:1
UserLanguage:EN
PassThru:0
NumberOfConnections:0
MoveMarkers:Ship:Marker
ArchaeologyHelperCountArtifacts:1
ArchaeologyHelperStoreFromCount:1
}}

#Alias ConfOpenMenu {
 #If {%Length(%1)=0} {
  #Var ConfTmp1 {ConfMenus};
  #Var ConfTmp2 {{:00@ConfPreviousMenus}}
 } {
  #Var ConfTmp1 {ConfMenu%1};
  #Var ConfTmp2 {{:10@ConfPreviousMenus} {%1}}
 };
 #Var ConfTmp1 {%Word(@{@ConfTmp1},%Chr(250),1)};
 #Var ConfTmp1 {%Expand(@ConfTmp1)};
 #If {%Length(@ConfPreviousMenus)>0} {#Var ConfTmp1 {@ConfTmp1[0] Go back.%{CRLF}}};
 #Var ConfTmp3 {%Pos(%CRLF,@ConfTmp1)};
 SPPrompt {%Copy(@ConfTmp1,1,%Eval(@ConfTmp3-1))} {%Copy(@ConfTmp1,%Eval(@ConfTmp3+2),%Eval(%Length(@ConfTmp1)-@ConfTmp3-3))} {conf @ConfTmp2};
 #UnVar ConfTmp1;
 #UnVar ConfTmp2;
 #UnVar ConfTmp3
} {}

#Alias conf {
 #If {%Length(%1)=0} {
  #Var ConfPreviousMenus {};
  ConfOpenMenu;
  #Abort
 };
 #Var ConfTriggeredByPrompt {%If(%Pos(:,%1)>0,1,0)};
 #Var ConfMenuSetByPrompt {%If(@ConfTriggeredByPrompt=1,%Copy(%1,2,1),0)};
 #Var ConfOptionSetByPrompt {%If(@ConfTriggeredByPrompt=1,%Copy(%1,3,1),0)};
 #If {@ConfTriggeredByPrompt=1} {#Var ConfPreviousMenus {%Copy(%1,4,%Eval(%Length(%1)-3))}} {#Var ConfPreviousMenus {}};
 #Var ConfMenuSetByAlias 0;
 #Var ConfOptionSetByAlias 0;
 #Var ConfTmp1 {%If(@ConfTriggeredByPrompt=1,2,1)};
 #Var ConfMenu {%{@ConfTmp1}};
 #Var ConfOption {%{%Eval(@ConfTmp1+1)}};
 #Var ConfOptionValue {%{%Eval(@ConfTmp1+2)}};
 #If {@ConfTriggeredByPrompt=0} {
  #Var ConfTmp1 {%Pos(%CRLF@ConfMenu:,@ConfAliases)};
  #If {@ConfTmp1>0} {
   #Var ConfTmp1 {%Delete(@ConfAliases,1,%Eval(@ConfTmp1+1))};
   #Var ConfTmp1 {%Word(@ConfTmp1,%CRLF,1)};
   #Var ConfMenu {%Word(@ConfTmp1,:,2)};
   #Var ConfMenuSetByAlias 1;
   #If {%NumWords(@ConfTmp1,:)>2} {
    #Var ConfOptionSetByAlias 1;
    #Var ConfOptionValue {@ConfOption};
    #Var ConfOption {%Word(@ConfTmp1,:,3)}
   }
  }
 };
 #If {@ConfMenuSetByPrompt=0 and @ConfMenuSetByAlias=0} {
  #Var ConfTmp1 {%Word(@ConfMenus,%Chr(250),1)};
  #If {%IsNumber(@ConfMenu)=1} {
   #Math ConfTmp1 {%NumWords(@ConfTmp1,@CR)-2};
   #If {@ConfMenu>@ConfTmp1} {
    #Say {That conf menu does not exist.};
    #Var ConfMenu {}
   }
  } {
   #Var ConfTmp1 {%Pos(] @ConfMenu,@ConfMenus)};
   #If {@ConfTmp1=0} {
    #Say {That conf menu does not exist.};
    #Var ConfMenu {}
   } {
    #Var ConfTmp1 {%Copy(@ConfMenus,1,@ConfTmp1)};
    #Math ConfMenu {%NumWords(@ConfTmp1,@CR)-1}
   }
  }
 };
 #If {%IsNumber(@ConfMenu)=1} {
  #If {@ConfMenu<1} {
   #If {@ConfMenu=0} {
    #Var ConfMenu {%Pop(ConfPreviousMenus)}
   } {
    #Var ConfMenu {};
    #Var ConfPreviousMenus {}
   }
  } {
   #Var ConfTmp1 {%Word(@ConfMenus,%Chr(250),2)};
   #Var ConfMenu {%Word(@ConfTmp1,%CRLF,%Eval(@ConfMenu+1))}
  }
 };
 #If {%Length(@ConfMenu)=0} {
  ConfOpenMenu;
  #Abort
 };
 #Var ConfMenuVar {ConfMenu@ConfMenu};
 #If {%Defined(@ConfMenuVar)=0} {
  #Say {~@@ConfMenuVar is missing.};
  ConfOpenMenu;
  #Abort
 };
 #If {%Length(@ConfOption)=0} {
  #Var ConfPreviousMenus {|};
  ConfOpenMenu {@ConfMenu};
  #Abort
 };
 #If {@ConfOptionSetByPrompt=0} {
  #Var ConfTmp1 {%Word(@{@ConfMenuVar},%Chr(250),1)};
  #If {%IsNumber(@ConfOption)=1} {
   #If {@ConfOption<1} {
    #If {@ConfOption=0} {
     #Var ConfMenu {%Pop(ConfPreviousMenus)}
    } {
     #Var ConfMenu {};
     #Var ConfPreviousMenus {}
    };
    #UnVar ConfOption
   } {
    #Math ConfTmp1 {%NumWords(@ConfTmp1,@CR)-2};
    #If {@ConfOption>@ConfTmp1} {
     #Say {That option does not exist.};
     #UnVar ConfOption
    }
   }
  } {
   #Var ConfTmp1 {%Pos(] @ConfOption,@{@ConfMenuVar})};
   #If {@ConfTmp1=0} {
    #Say {That option does not exist.};
    #UnVar ConfOption
   } {
    #Var ConfTmp1 {%Copy(@{@ConfMenuVar},1,@ConfTmp1)};
    #Math ConfOption {%NumWords(@ConfTmp1,@CR)-1}
   }
  }
 };
 #If {%Defined(ConfOption)=0} {
  ConfOpenMenu {@ConfMenu};
  #Abort
 };
 #Var ConfTmp1 {%Word(@{@ConfMenuVar},%Chr(250),2)};
 #Var ConfOptionData {%Word(@ConfTmp1,%CRLF,%Eval(@ConfOption+1))};
 #Var ConfOptionVar {%Word(@ConfOptionData,|,1)};
 #Var ConfOptionType {%Word(@ConfOptionData,|,2)};
 #Var ConfTmp1 {%NumWords(@ConfOptionType,:)};
 #If {@ConfTmp1>2} {#Var ConfOptionCallback {%Word(@ConfOptionType,:,3)}} {#UnVar ConfOptionCallback};
 #If {@ConfTmp1>1} {
  #Var ConfOptionValues {%Word(@ConfOptionType,:,2)};
  #Var ConfOptionType {%Word(@ConfOptionType,:,1)}
 } {
  #Var ConfOptionValues {}
 };
 #Var ConfTmp1 {%NumWords(@ConfOptionData,|)};
 #Var ConfOptionCaption {%If(@ConfTmp1>2,%Word(@ConfOptionData,|,3),)};
 #Var ConfOptionHint {%If(@ConfTmp1>3,%Word(@ConfOptionData,|,4),)};
 #Var ConfTmp1 {%Word(@{@ConfMenuVar},%Chr(250),1)};
 #Var ConfTmp1 {%Word(@ConfTmp1,%CRLF,%Eval(@ConfOption+1))};
 #Var ConfOptionLabel {%Word(@ConfTmp1,],2)};
 #Var ConfOptionLabel {%Word(@ConfOptionLabel,[,1)};
 #Var ConfOptionLabel {%Trim(@ConfOptionLabel)};
 #If {%Length(@ConfOptionCaption)=0} {#Var ConfOptionCaption {@ConfOptionLabel}};
 #Var ConfOptionSuccess 0;
 #If {@ConfOptionType="B"} {
  #If {%Length(@ConfOptionValue)=0} {
   #Var {@ConfOptionVar} {%If(Not @{@ConfOptionVar},1,0)}
  } {
   #Var {@ConfOptionVar} {%IfWord(@ConfOptionValue,on 1 enable enabled, )}
  };
  #Var ConfOptionSuccess 1;
  #If {%Length(@ConfOptionCallback)>0} {#Exec {@ConfOptionCallback}};
  #If {@ConfOptionSuccess=1} {
   #Say {It's now %If(@{@ConfOptionVar}=0,off,on).};
   #If {@ConfMenuSetByPrompt=1} {ConfOpenMenu {@ConfMenu}}
  }
 };
 #If {@ConfOptionType="C"} {
  #Var ConfTmpOptionValueWithWildcards {%If(%Length(@ConfOptionValue)>0 and %IsNumber(@ConfOptionValue)=0,@ConfOptionValue*,)};
  #Var ConfTmp1 0;
  #ForAll {%Replace(@ConfOptionValues,^,|)} {
   #Math ConfTmp1 {@ConfTmp1+1};
   #Var ConfTmp2 {%Pos(~,,%i)};
   #If {@ConfTmp2>0} {
    #If {@ConfTmp2=1} {
     #Var ConfTmpOptionValue {%Copy(%i,2,%Eval(%Length(%i)-2))};
     #Var ConfTmpOptionValueLabel {@ConfTmpOptionValue}
    } {
     #Var ConfTmpOptionValue {%Copy(%i,1,%Eval(@ConfTmp2-1))};
     #Var ConfTmpOptionValueLabel {%Copy(%i,%Eval(@ConfTmp2+1),%Eval(%Length(%i)-@ConfTmp2))}
    }
   } {
    #Var ConfTmpOptionValue {@ConfTmp1};
    #Var ConfTmpOptionValueLabel {%i}
   };
   #If {@ConfTmpOptionValue=@{@ConfOptionVar}} {
    #Var ConfOptionHint {@ConfOptionHint%CRLF[@ConfTmp1]*@ConfTmpOptionValueLabel.}
   } {
    #Var ConfOptionHint {@ConfOptionHint%CRLF[@ConfTmp1] @ConfTmpOptionValueLabel.}
   };
   #If {@ConfOptionSuccess=0} {
    #If {%IsNumber(@ConfOptionValue)=1} {
     #If {@ConfOptionValue=@ConfTmp1} {
      #Var {@ConfOptionVar} {@ConfTmpOptionValue};
      #Var ConfOptionSuccess 1;
      #Var ConfOptionSuccessMessage {It's now set to @ConfTmpOptionValueLabel.}
     }
    } {
     #If {%Length(@ConfTmpOptionValueWithWildcards)>0 and @ConfTmpOptionValueLabel=*@ConfTmpOptionValueWithWildcards} {
      #Var {@ConfOptionVar} {@ConfTmpOptionValue};
      #Var ConfOptionSuccess 1;
      #Var ConfOptionSuccessMessage {It's now set to @ConfTmpOptionValueLabel.}
     }
    }
   }
  };
  #If {%Left(@ConfOptionHint,2)=%CRLF} {#Var ConfOptionHint {%Delete(@ConfOptionHint,1,2)}};
  #If {@ConfOptionSuccess=1 and %Length(@ConfOptionCallback)>0} {#Exec {@ConfOptionCallback}};
  #If {@ConfOptionSuccess=0} {
   #If {%Length(@ConfOptionValue)>0 or @ConfOptionSetByPrompt=1} {
    #Say {Invalid choice.}
   };
   SPPrompt {@ConfOptionCaption} {@ConfOptionHint} {conf {:@{ConfMenuSetByPrompt}1@ConfPreviousMenus} {@ConfMenu} {@ConfOption}}
  } {
   #Say {@ConfOptionSuccessMessage};
   #If {@ConfMenuSetByPrompt=1} {
    ConfOpenMenu {@ConfMenu}
   }
  }
 };
 #If {@ConfOptionType="E" and %Length(@ConfOptionCallback)>0} {
  #Var ConfOptionSuccess 1;
  #Exec {@ConfOptionCallback};
  #If {@ConfOptionSuccess=1 and @ConfMenuSetByPrompt=1} {ConfOpenMenu {@ConfMenu}}
 };
 #If {@ConfOptionType="M"} {
  #Var ConfOptionSuccess 1;
  #If {%Length(@ConfOptionCallback)>0} {#Exec {@ConfOptionCallback}};
  #If {@ConfOptionSuccess=1} {
   #Var ConfPreviousMenus {@ConfMenu|@ConfPreviousMenus};
   ConfOpenMenu {@ConfOptionVar}
  }
 };
 #If {@ConfOptionType="N"} {
  #If {%Length(@ConfOptionValue)>0 or @ConfOptionSetByPrompt=1} {
   #If {%Length(@ConfOptionValues)>0} {
    #If {%Pos(^,@ConfOptionValues)>0} {
     #Var ConfTmpMin {%Word(@ConfOptionValues,^,1)};
     #Var ConfTmpMax {%Word(@ConfOptionValues,^,2)}
    } {
     #Var ConfTmpMin {@ConfOptionValues};
     #Var ConfTmpMax {1000000000}
    }
   } {
    #Var ConfTmpMin {-1000000000};
    #Var ConfTmpMax {1000000000}
   };
   #If {%IsNumber(@ConfOptionValue)=1} {
    #If {@ConfOptionValue>=@ConfTmpMin and @ConfOptionValue<=@ConfTmpMax} {
     #Var {@ConfOptionVar} {@ConfOptionValue};
     #Var ConfOptionSuccess 1
    }
   };
   #If {@ConfOptionSuccess=0} {
    #Say {The number must be %If(@ConfTmpMax=1000000000,equal to or greater than @ConfTmpMin,between @ConfTmpMin and @ConfTmpMax).}
   } {
    #If {%Length(@ConfOptionCallback)>0} {#Exec {@ConfOptionCallback}}
   };
   #If {@ConfOptionSuccess=0} {
    SPPrompt {@ConfOptionCaption} {@ConfOptionHint} {conf {:@{ConfMenuSetByPrompt}1@ConfPreviousMenus} {@ConfMenu} {@ConfOption}}
   } {
    #Say {It's now set to @{@ConfOptionVar}.};
    #If {@ConfMenuSetByPrompt=1} {ConfOpenMenu {@ConfMenu}}
   }
  } {
   SPPrompt {@ConfOptionCaption} {@ConfOptionHint} {conf {:@{ConfMenuSetByPrompt}1@ConfPreviousMenus} {@ConfMenu} {@ConfOption}}
  }
 };
 #If {@ConfOptionType="S"} {
  #If {%Length(@ConfOptionValue)>0 or @ConfOptionSetByPrompt=1} {
   #If {%Length(@ConfOptionValues)>0} {
    #If {%Length(@ConfOptionValue)>0 and %Replace(@ConfOptionValue,~",)=*@ConfOptionValues} {#Var ConfOptionSuccess 1}
   } {
    #Var ConfOptionSuccess 1
   };
   #If {@ConfOptionSuccess=1} {
    #Var {@ConfOptionVar} {@ConfOptionValue}
   } {
    #Say {Invalid value.};
    SPPrompt {@ConfOptionCaption} {@ConfOptionHint} {:conf {:@{ConfMenuSetByPrompt}1@ConfPreviousMenus} {@ConfMenu} {@ConfOption}}
   };
   #If {@ConfOptionSuccess=1 and %Length(@ConfOptionCallback)>0} {#Exec {@ConfOptionCallback}};
   #If {@ConfOptionSuccess=1} {
    #If {%Length(@{@ConfOptionVar})>0} {
     #Say {Set!}
    } {
     #Say {Value cleared.}
    };
    #If {@ConfMenuSetByPrompt=1} {ConfOpenMenu {@ConfMenu}}
   }
  } {
   SPPrompt {@ConfOptionCaption} {@ConfOptionHint} {:conf {:@{ConfMenuSetByPrompt}1@ConfPreviousMenus} {@ConfMenu} {@ConfOption}}
  }
 }
} {}

#Var ConfEchoText {}
#Var ConfEchoTmp {}
#Var ConfPrintQuietly 0
#Alias ConfPrint {
 #If {%CharInfo(Connected)=1 and @Connected=1 and @ConfEchoMode=1 and @ConfEchoText=""} {
  #Conf DisplayCommandsInOutput False;
  #If {%2=1} {
   #Var ConfEchoTmp {@ConfEchoTmp%1%CRLF};
   #Abort All
  };
  #Var ConfEchoText {@ConfEchoTmp%1};
  #Var ConfEchoTmp {};
  #If {%Pos(%CRLF,@ConfEchoText)=0} {
   Echo @ConfEchoText;
   #Var ConfEchoText {}
  } {
   #Class ConfEcho Enable;
   #Var ConfPrintLines {%NumWords(@ConfEchoText,%Chr(13))};
   #Exec {Echo;#%Min(@ConfPrintLines,10) {~%Eval(~%i-1)};.}
  };
  #If {@CommandEcho=1} {#Conf DisplayCommandsInOutput True}
 } {
  #Var ConfPrintQuietly 0;
  #Say {%1}
 }
} {}

#Alias ConfLoad {
 #If {%1="default"} {
  #ForAll {%Replace(@ConfOptionVars,%CRLF,|)} {
   #If {%Length(%i)>0} {
    #Var ConfTmp6 {%Word(%i,:,1)};
    #If {%NumWords(%i,:)>2} {
     #Var {@ConfTmp6} {%Copy(%i,%Eval(%Length(@ConfTmp6)+2),%Eval(%Length(%i)-%Length(@ConfTmp6)-1))}
    } {
     #Var {@ConfTmp6} {%Word(%i,:,2)}
    };
    #Var {@ConfTmp6} {%Replace(%Replace(@{@ConfTmp6},&CRLF;,%CRLF),&SPC;, )}
   }
  };
  #Say {Default settings loaded.}
 } {
  #Load {%MudName/Conf%If(%Length(%1)>0,.%1,).set};
  #If {%2<>"quiet"} {#Say {Settings named @ConfName have been loaded%If(%Length(%1)>0, from %1,).}}
 }
} {}
#Alias ConfSave {
 #If {%Length(%1)>0} {
  #Var ConfTmpFile {%MudName/Conf.%1.set};
  #File 1 {@ConfTmpFile};
  #Write 1 {dummy};
  #Close 1
 } {
  #Var ConfTmpFile {%MudName/Conf.set}
 };
 #Var ConfTmp6 {};
 #ForAll {%Replace(@ConfOptionVars,%CRLF,|)} {
  #If {%Length(%i)>0} {
   #Var ConfTmp7 {%Word(%i,:,1)};
   #If {%IsNumber(@{@ConfTmp7})=1} {
    #Var ConfTmp6 {@ConfTmp6#Var @ConfTmp7 @{@ConfTmp7}%CRLF}
   } {
    #Var ConfTmp8 {%Replace(@{@ConfTmp7},~%,~~~%)};
    #Var ConfTmp8 {%Replace(@ConfTmp8,~@,~~~@)};
    #Var ConfTmp8 {%Replace(@ConfTmp8,~{,~~~{)};
    #Var ConfTmp6 {@ConfTmp6#Var @ConfTmp7 {%Replace(@ConfTmp8,~},~~~})}%CRLF}
   }
  }
 };
 #DelFile {@ConfTmpFile};
 #File 1 {@ConfTmpFile};
 #Write 1 {@ConfTmp6};
 #Close 1;
 #If {%2<>"quiet"} {#Say {Settings named @ConfName have been saved%If(%Length(%1)>0, to %1,).}};
 #UnVar ConfTmpFile
} {}
#Alias ConfSaveAll {
 ConfSave {} quiet;
 #Var ConfTmp6 {};
 #ForAll {@PreservedVariables|PreservedVariables} {
  #If {%Length(%i)>0} {
   #If {%IsNumber(@{%i})=1} {
    #Var ConfTmp6 {@ConfTmp6#Var %i @{%i}%CRLF}
   } {
    #Var ConfTmp7 {%Replace(@{%i},~~,~~~~)};
    #Var ConfTmp7 {%Replace(@ConfTmp7,~@,~~~@)};
    #Var ConfTmp7 {%Replace(@ConfTmp7,~%,~~~%)};
    #Var ConfTmp6 {@ConfTmp6#Var %i {%Replace(@ConfTmp7,~},~~~})}%CRLF}
   }
  }
 };
 #DelFile {%MudName/Variables.set};
 #File 1 {%MudName/Variables.set};
 #Write 1 {@ConfTmp6};
 #Close 1;
 #If {@LogHistory=1 and %Defined(HistorySoundHandle)=1} {#Alarm 0 {WriteToLogFile}};
 #If {%1<>"1"} {#Say {Settings saved.}}
} {}

#Alias ConfFix {
 #ForAll {%Replace(@ConfOptionVars,%CRLF,|)} {
  #If {%Length(%i)>0} {
   #Var ConfTmp6 {%Word(%i,:,1)};
   #If {%Defined(@ConfTmp6)=0} {
    #If {%NumWords(%i,:)>2} {
     #Var {@ConfTmp6} {%Copy(%i,%Eval(%Length(@ConfTmp6)+2),%Eval(%Length(%i)-%Length(@ConfTmp6)-1))}
    } {
     #Var {@ConfTmp6} {%Word(%i,:,2)}
    };
    #Var {@ConfTmp6} {%Replace(%Replace(@{@ConfTmp6},&CRLF;,%CRLF),&SPC;, )}
   }
  }
 };
 #If {%1<>"quick"} {ConfSaveAll}
} {}

#Trigger {What text would you like repeated back to you[?]} {
 #GagLine 2 All
} {ConfEcho}
#Trigger {#} {
 #If {%1=0 and @ConfPrintLines>10} {
  #Var ConfTmp6 {};
  #Exec {#%Eval(@ConfPrintLines-10) {#Var ConfTmp6 {~@ConfTmp6~%Word(~@ConfEchoText,%CRLF,~%i)%CRLF}}};
  #Say @ConfTmp6 NoReturn
 };
 #Sub {%Word(@ConfEchoText,%CRLF,%Eval(1+@ConfPrintLines-(%Min(@ConfPrintLines,10)-%1)))};
 #If {%Min(@ConfPrintLines,10)=%Eval(%1+1)} {
  #Class ConfEcho Disable;
  #Var ConfEchoText {}
 }
} {ConfEcho}

#Exec {ConfFix quick}
